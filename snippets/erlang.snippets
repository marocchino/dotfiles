# module and export all
nt
snippet mod
nt
	-module(${1:`Filename('', 'my')`}).
nt
	
nt
	-compile([export_all]).
nt
	
nt
	start() ->
nt
	    ${2}
nt
	
nt
	stop() ->
nt
	    ok.
nt
# define directive
nt
snippet def
nt
	-define(${1:macro}, ${2:body}).${3}
nt
# export directive
nt
snippet exp
nt
	-export([${1:function}/${2:arity}]).
nt
# include directive
nt
snippet inc
nt
	-include("${1:file}").${2}
nt
# behavior directive
nt
snippet beh
nt
	-behaviour(${1:behaviour}).${2}
nt
# if expression
nt
snippet if
nt
	if
nt
	    ${1:guard} ->
nt
	        ${2:body}
nt
	end
nt
# case expression
nt
snippet case
nt
	case ${1:expression} of
nt
	    ${2:pattern} ->
nt
	        ${3:body};
nt
	end
nt
# record directive
nt
snippet rec
nt
	-record(${1:record}, {
nt
	    ${2:field}=${3:value}}).${4}
nt
